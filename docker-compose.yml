version: '3.4'

services:
  taskmanagementapi:
    build:
      context: ./TaskManagementAPI
      dockerfile: Dockerfile
    # ports:
    #  - "8080:8080"
    #  - "8081:8081"
    expose:
      - "8080"
    depends_on:
     - sqlserver
     - redis  
    environment:
     - ASPNETCORE_ENVIRONMENT=Development
    networks:
     - productnetwork
    restart: on-failure

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: taskmanagement-sqlserver
    environment:
      MSSQL_SA_PASSWORD: "Password123456!"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlvolume:/var/opt/mssql
    networks:
      - productnetwork
  
  redis:
    image: redis:7-alpine
    container_name: taskmanagement-redis
    hostname: redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass TaskManagement2024
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - productnetwork

  nginx:
    image: nginx:alpine
    container_name: taskmanagement-nginx
    ports:
      - "80:80"    # HTTP
      - "443:443"  # HTTPS
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro  # SSL certificates
      - ./nginx/logs:/var/log/nginx
    # depends_on:
      # taskmanagementapi:
      #   condition: service_healthy
    networks:
      - productnetwork
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

networks:
  productnetwork:

volumes:
  sqlvolume:
  redisdata:
